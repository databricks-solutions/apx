{
  "version": 3,
  "sources": ["../src/apx/plugins/index.ts", "../node_modules/smol-toml/dist/error.js", "../node_modules/smol-toml/dist/util.js", "../node_modules/smol-toml/dist/date.js", "../node_modules/smol-toml/dist/primitive.js", "../node_modules/smol-toml/dist/extract.js", "../node_modules/smol-toml/dist/struct.js", "../node_modules/smol-toml/dist/parse.js"],
  "sourcesContent": [
    "import { existsSync, mkdirSync, writeFileSync, readFileSync } from \"fs\";\nimport { join, resolve } from \"path\";\nimport { type Plugin } from \"vite\";\nimport { spawn, type ChildProcess } from \"child_process\";\nimport { createHash } from \"crypto\";\nimport { generate, type OutputOptions } from \"orval\";\nimport { parse } from \"smol-toml\";\n\n// Cache for OpenAPI spec hashes to detect changes\nconst specHashCache = new Map<string, string>();\n\nexport type StepAction = string | (() => void | Promise<void>);\n\nexport type StepSpec = {\n  name: string;\n  action: StepAction;\n};\n\nexport const Step = (spec: StepSpec): StepSpec => spec;\n\n/**\n * Predefined step for generating OpenAPI schema\n * @param appModule - The Python module path (e.g., \"sample.api.app:app\")\n * @param outputPath - Where to write the OpenAPI JSON file\n */\nexport const OpenAPI = (appModule: string, outputPath: string): StepSpec => ({\n  name: \"openapi\",\n  action: `uv run --no-sync apx openapi ${appModule} ${outputPath}`,\n});\n\n/**\n * Predefined step for generating API client with Orval\n * Skips generation if the OpenAPI spec hasn't changed since last run\n * @param input - Path to the OpenAPI spec file\n * @param output - Orval output configuration\n */\nexport const Orval = ({\n  input,\n  output,\n}: {\n  input: string;\n  output: OutputOptions;\n}): StepSpec => ({\n  name: \"orval\",\n  action: async () => {\n    // Check if spec file exists\n    if (!existsSync(input)) {\n      console.warn(\n        `[apx] OpenAPI spec not found at ${input}, skipping Orval generation`,\n      );\n      return;\n    }\n\n    // Read and hash the spec file\n    const specContent = readFileSync(input, \"utf-8\");\n    const specHash = createHash(\"sha256\").update(specContent).digest(\"hex\");\n\n    // Check if spec has changed\n    const cachedHash = specHashCache.get(input);\n    if (cachedHash === specHash) {\n      console.log(`[apx] OpenAPI spec unchanged, skipping Orval generation`);\n      return;\n    }\n\n    // Generate API client\n    await generate({\n      input,\n      output,\n    });\n\n    // Update cache\n    specHashCache.set(input, specHash);\n  },\n});\n\nexport interface ApxPluginOptions {\n  steps?: StepSpec[];\n  ignore?: string[];\n}\n\nexport function apx(options: ApxPluginOptions = {}): Plugin {\n  const { steps = [], ignore = [] } = options;\n\n  let outDir: string;\n  let timer: NodeJS.Timeout | null = null;\n  let stopping = false;\n  let resolvedIgnores: string[] = [];\n  let isRunningSteps = false;\n  let childProcesses: ChildProcess[] = [];\n\n  /**\n   * Executes a shell command using spawn, with proper signal handling\n   */\n  function executeShellCommand(command: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (stopping) {\n        console.log(`[apx] Skipping command (stopping): ${command}`);\n        resolve();\n        return;\n      }\n\n      console.log(`[apx] Executing: ${command}`);\n\n      // Parse command into command and args\n      const parts = command.split(/\\s+/);\n      const cmd = parts[0];\n      const args = parts.slice(1);\n\n      // Check if we should pipe output (for use with apx dev)\n      // When APX_PIPE_OUTPUT is set, we pipe instead of inherit to allow parent to prefix output\n      const shouldPipe = process.env.APX_PIPE_OUTPUT === \"1\";\n\n      // Spawn process with proper signal handling\n      const child = spawn(cmd, args, {\n        stdio: shouldPipe ? \"pipe\" : \"inherit\", // Pipe when running under apx dev\n        shell: true, // Use shell for proper command parsing\n        detached: false, // Keep in same process group for signal propagation\n      });\n\n      // If piping, forward output to console (it will be captured by parent)\n      if (shouldPipe && child.stdout && child.stderr) {\n        child.stdout.on(\"data\", (data) => {\n          process.stdout.write(data);\n        });\n        child.stderr.on(\"data\", (data) => {\n          process.stderr.write(data);\n        });\n      }\n\n      // Track child process for cleanup\n      childProcesses.push(child);\n\n      child.on(\"error\", (err) => {\n        console.error(`[apx] Process error:`, err);\n        reject(err);\n      });\n\n      child.on(\"exit\", (code, signal) => {\n        // Remove from tracking\n        childProcesses = childProcesses.filter((p) => p.pid !== child.pid);\n\n        if (signal) {\n          console.log(\n            `[apx] Process ${child.pid} exited with signal: ${signal}`,\n          );\n          resolve(); // Treat signal termination as success for cleanup scenarios\n        } else if (code !== 0) {\n          console.error(`[apx] Process ${child.pid} exited with code: ${code}`);\n          reject(new Error(`Command failed with exit code ${code}`));\n        } else {\n          resolve();\n        }\n      });\n\n      // If we're stopping, kill the process immediately\n      if (stopping && child.pid) {\n        console.log(`[apx] Killing process ${child.pid} (stopping)`);\n        killProcess(child);\n      }\n    });\n  }\n\n  /**\n   * Kills a process and all its children\n   */\n  function killProcess(proc: ChildProcess): void {\n    if (!proc.pid) return;\n\n    try {\n      // On Unix-like systems, kill the process group\n      // Negative PID kills the entire process group\n      if (process.platform !== \"win32\") {\n        process.kill(-proc.pid, \"SIGTERM\");\n        console.log(`[apx] Sent SIGTERM to process group -${proc.pid}`);\n      } else {\n        // On Windows, just kill the process\n        proc.kill(\"SIGTERM\");\n        console.log(`[apx] Sent SIGTERM to process ${proc.pid}`);\n      }\n    } catch (err) {\n      console.error(`[apx] Error killing process ${proc.pid}:`, err);\n      // Try forceful kill as fallback\n      try {\n        proc.kill(\"SIGKILL\");\n      } catch (e) {\n        // Ignore errors on forceful kill\n      }\n    }\n  }\n\n  async function executeAction(action: StepAction): Promise<void> {\n    if (stopping) {\n      console.log(`[apx] Skipping action (stopping)`);\n      return;\n    }\n\n    ensureOutDirAndGitignore();\n    if (typeof action === \"string\") {\n      // Execute as shell command\n      await executeShellCommand(action);\n    } else {\n      // Execute as function\n      if (stopping) return;\n      await action();\n    }\n    ensureOutDirAndGitignore();\n  }\n\n  async function runAllSteps(): Promise<void> {\n    if (stopping) {\n      console.log(`[apx] Skipping steps (stopping)`);\n      return;\n    }\n\n    if (isRunningSteps) {\n      console.log(`[apx] Steps already running, skipping...`);\n      return;\n    }\n\n    console.log(`[apx] Running ${steps.length} step(s)...`);\n    isRunningSteps = true;\n\n    try {\n      for (const step of steps) {\n        if (stopping) {\n          console.log(`[apx] Stopping during step execution`);\n          break;\n        }\n        const start = Date.now();\n        try {\n          console.log(`[apx] ${step.name} ⏳`);\n          await executeAction(step.action);\n          console.log(`[apx] ${step.name} ✓ (${Date.now() - start} ms)`);\n        } catch (err) {\n          console.error(`[apx] ${step.name} ✗`, err);\n          throw err;\n        }\n      }\n      console.log(`[apx] All steps completed`);\n    } finally {\n      isRunningSteps = false;\n    }\n  }\n\n  /**\n   * Ensures the output directory exists and contains a .gitignore file.\n   * This is called at multiple points to guarantee the directory is always present.\n   */\n  function ensureOutDirAndGitignore(): void {\n    if (!outDir) {\n      console.error(`[apx] outDir is not set`);\n      return;\n    }\n\n    try {\n      // Always ensure the output directory exists\n      if (!existsSync(outDir)) {\n        mkdirSync(outDir, { recursive: true });\n      }\n\n      // Always ensure .gitignore exists in output directory\n      const gitignorePath = join(outDir, \".gitignore\");\n      if (!existsSync(gitignorePath)) {\n        writeFileSync(gitignorePath, \"*\\n\");\n      }\n    } catch (err) {\n      console.error(`[apx] failed to ensure output directory:`, err);\n    }\n  }\n\n  function stop(): void {\n    if (stopping) return;\n    console.log(`[apx] Stopping... (${childProcesses.length} child processes)`);\n    stopping = true;\n\n    // Clear any pending timers\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n\n    // Kill all tracked child processes\n    if (childProcesses.length > 0) {\n      console.log(\n        `[apx] Killing ${childProcesses.length} child process(es)...`,\n      );\n      childProcesses.forEach((proc) => {\n        if (proc.pid) {\n          killProcess(proc);\n        }\n      });\n      childProcesses = [];\n    }\n\n    console.log(`[apx] Stopped`);\n  }\n\n  function reset(): void {\n    stopping = false;\n    timer = null;\n    isRunningSteps = false;\n    childProcesses = [];\n  }\n\n  return {\n    name: \"apx\",\n    apply: () => true,\n\n    configResolved(config) {\n      outDir = resolve(config.root, config.build.outDir);\n      resolvedIgnores = ignore.map((pattern) =>\n        resolve(process.cwd(), pattern),\n      );\n\n      // Reset state for new build\n      reset();\n\n      // Ensure directory exists as soon as we know the outDir\n      ensureOutDirAndGitignore();\n    },\n\n    configureServer(server) {\n      // Let Vite handle SIGINT/SIGTERM - we'll clean up via server.close and closeBundle\n      // DON'T add signal handlers here as they interfere with Vite's signal handling\n      // See: https://github.com/vitejs/vite/issues/11434\n      server.httpServer?.once(\"close\", () => {\n        console.log(`[apx] Server closing, stopping plugin...`);\n        stop();\n      });\n\n      // Ensure directory exists when server starts\n      ensureOutDirAndGitignore();\n    },\n\n    async buildStart() {\n      // Ensure directory exists before build starts\n      ensureOutDirAndGitignore();\n\n      if (steps.length > 0) {\n        await runAllSteps();\n      }\n    },\n\n    handleHotUpdate(ctx) {\n      // Ensure directory exists on every HMR update\n      ensureOutDirAndGitignore();\n\n      // Don't trigger updates if stopping\n      if (stopping) {\n        console.log(`[apx] HMR update ignored (stopping)`);\n        return;\n      }\n\n      // Check if file should be ignored\n      if (resolvedIgnores.some((pattern) => ctx.file.includes(pattern))) {\n        return;\n      }\n\n      console.log(`[apx] HMR update detected: ${ctx.file}`);\n\n      // Debounce step execution on HMR updates\n      if (timer) {\n        clearTimeout(timer);\n      }\n\n      timer = setTimeout(async () => {\n        timer = null;\n\n        // Double-check we're not stopping before running\n        if (stopping) {\n          return;\n        }\n        // Ensure directory exists before running steps\n        ensureOutDirAndGitignore();\n        await runAllSteps();\n\n        // Ensure directory exists after running steps\n        ensureOutDirAndGitignore();\n      }, 100);\n\n      // Allow the process to exit even if this timer is pending\n      timer.unref();\n    },\n\n    writeBundle() {\n      // Ensure directory exists after files are written\n      ensureOutDirAndGitignore();\n    },\n\n    closeBundle() {\n      // Ensure directory exists one final time\n      ensureOutDirAndGitignore();\n      stop();\n    },\n  };\n}\n\nexport type ApxMetadata = {\n  appName: string;\n  appModule: string;\n};\n\n// read metadata from pyproject.toml using toml npm package\nexport function readMetadata(): ApxMetadata {\n  const pyprojectPath = join(process.cwd(), \"pyproject.toml\");\n  const pyproject = parse(readFileSync(pyprojectPath, \"utf-8\"));\n\n  // Safely access deep properties, with type checks to satisfy TypeScript\n  const tool =\n    typeof pyproject === \"object\" && pyproject !== null && \"tool\" in pyproject\n      ? (pyproject as any).tool\n      : undefined;\n  const apx =\n    tool && typeof tool === \"object\" && tool !== null && \"apx\" in tool\n      ? tool.apx\n      : undefined;\n  const metadata =\n    apx && typeof apx === \"object\" && apx !== null && \"metadata\" in apx\n      ? apx.metadata\n      : undefined;\n\n  if (!metadata || typeof metadata !== \"object\") {\n    throw new Error(\"Could not find [tool.apx.metadata] in pyproject.toml\");\n  }\n\n  return {\n    appName: metadata[\"app-name\"],\n    appModule: metadata[\"app-module\"],\n  } as ApxMetadata;\n}\n\n// Default export for convenience: import apx from \"apx\"\nexport default apx;\n",
    "/*!\n * Copyright (c) Squirrel Chat et al., All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. Neither the name of the copyright holder nor the names of its contributors\n *    may be used to endorse or promote products derived from this software without\n *    specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nfunction getLineColFromPtr(string, ptr) {\n    let lines = string.slice(0, ptr).split(/\\r\\n|\\n|\\r/g);\n    return [lines.length, lines.pop().length + 1];\n}\nfunction makeCodeBlock(string, line, column) {\n    let lines = string.split(/\\r\\n|\\n|\\r/g);\n    let codeblock = '';\n    let numberLen = (Math.log10(line + 1) | 0) + 1;\n    for (let i = line - 1; i <= line + 1; i++) {\n        let l = lines[i - 1];\n        if (!l)\n            continue;\n        codeblock += i.toString().padEnd(numberLen, ' ');\n        codeblock += ':  ';\n        codeblock += l;\n        codeblock += '\\n';\n        if (i === line) {\n            codeblock += ' '.repeat(numberLen + column + 2);\n            codeblock += '^\\n';\n        }\n    }\n    return codeblock;\n}\nexport class TomlError extends Error {\n    line;\n    column;\n    codeblock;\n    constructor(message, options) {\n        const [line, column] = getLineColFromPtr(options.toml, options.ptr);\n        const codeblock = makeCodeBlock(options.toml, line, column);\n        super(`Invalid TOML document: ${message}\\n\\n${codeblock}`, options);\n        this.line = line;\n        this.column = column;\n        this.codeblock = codeblock;\n    }\n}\n",
    "/*!\n * Copyright (c) Squirrel Chat et al., All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. Neither the name of the copyright holder nor the names of its contributors\n *    may be used to endorse or promote products derived from this software without\n *    specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport { TomlError } from './error.js';\nfunction isEscaped(str, ptr) {\n    let i = 0;\n    while (str[ptr - ++i] === '\\\\')\n        ;\n    return --i && (i % 2);\n}\nexport function indexOfNewline(str, start = 0, end = str.length) {\n    let idx = str.indexOf('\\n', start);\n    if (str[idx - 1] === '\\r')\n        idx--;\n    return idx <= end ? idx : -1;\n}\nexport function skipComment(str, ptr) {\n    for (let i = ptr; i < str.length; i++) {\n        let c = str[i];\n        if (c === '\\n')\n            return i;\n        if (c === '\\r' && str[i + 1] === '\\n')\n            return i + 1;\n        if ((c < '\\x20' && c !== '\\t') || c === '\\x7f') {\n            throw new TomlError('control characters are not allowed in comments', {\n                toml: str,\n                ptr: ptr,\n            });\n        }\n    }\n    return str.length;\n}\nexport function skipVoid(str, ptr, banNewLines, banComments) {\n    let c;\n    while ((c = str[ptr]) === ' ' || c === '\\t' || (!banNewLines && (c === '\\n' || c === '\\r' && str[ptr + 1] === '\\n')))\n        ptr++;\n    return banComments || c !== '#'\n        ? ptr\n        : skipVoid(str, skipComment(str, ptr), banNewLines);\n}\nexport function skipUntil(str, ptr, sep, end, banNewLines = false) {\n    if (!end) {\n        ptr = indexOfNewline(str, ptr);\n        return ptr < 0 ? str.length : ptr;\n    }\n    for (let i = ptr; i < str.length; i++) {\n        let c = str[i];\n        if (c === '#') {\n            i = indexOfNewline(str, i);\n        }\n        else if (c === sep) {\n            return i + 1;\n        }\n        else if (c === end || (banNewLines && (c === '\\n' || (c === '\\r' && str[i + 1] === '\\n')))) {\n            return i;\n        }\n    }\n    throw new TomlError('cannot find end of structure', {\n        toml: str,\n        ptr: ptr\n    });\n}\nexport function getStringEnd(str, seek) {\n    let first = str[seek];\n    let target = first === str[seek + 1] && str[seek + 1] === str[seek + 2]\n        ? str.slice(seek, seek + 3)\n        : first;\n    seek += target.length - 1;\n    do\n        seek = str.indexOf(target, ++seek);\n    while (seek > -1 && first !== \"'\" && isEscaped(str, seek));\n    if (seek > -1) {\n        seek += target.length;\n        if (target.length > 1) {\n            if (str[seek] === first)\n                seek++;\n            if (str[seek] === first)\n                seek++;\n        }\n    }\n    return seek;\n}\n",
    "/*!\n * Copyright (c) Squirrel Chat et al., All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. Neither the name of the copyright holder nor the names of its contributors\n *    may be used to endorse or promote products derived from this software without\n *    specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nlet DATE_TIME_RE = /^(\\d{4}-\\d{2}-\\d{2})?[T ]?(?:(\\d{2}):\\d{2}:\\d{2}(?:\\.\\d+)?)?(Z|[-+]\\d{2}:\\d{2})?$/i;\nexport class TomlDate extends Date {\n    #hasDate = false;\n    #hasTime = false;\n    #offset = null;\n    constructor(date) {\n        let hasDate = true;\n        let hasTime = true;\n        let offset = 'Z';\n        if (typeof date === 'string') {\n            let match = date.match(DATE_TIME_RE);\n            if (match) {\n                if (!match[1]) {\n                    hasDate = false;\n                    date = `0000-01-01T${date}`;\n                }\n                hasTime = !!match[2];\n                // Make sure to use T instead of a space. Breaks in case of extreme values otherwise.\n                hasTime && date[10] === ' ' && (date = date.replace(' ', 'T'));\n                // Do not allow rollover hours.\n                if (match[2] && +match[2] > 23) {\n                    date = '';\n                }\n                else {\n                    offset = match[3] || null;\n                    date = date.toUpperCase();\n                    if (!offset && hasTime)\n                        date += 'Z';\n                }\n            }\n            else {\n                date = '';\n            }\n        }\n        super(date);\n        if (!isNaN(this.getTime())) {\n            this.#hasDate = hasDate;\n            this.#hasTime = hasTime;\n            this.#offset = offset;\n        }\n    }\n    isDateTime() {\n        return this.#hasDate && this.#hasTime;\n    }\n    isLocal() {\n        return !this.#hasDate || !this.#hasTime || !this.#offset;\n    }\n    isDate() {\n        return this.#hasDate && !this.#hasTime;\n    }\n    isTime() {\n        return this.#hasTime && !this.#hasDate;\n    }\n    isValid() {\n        return this.#hasDate || this.#hasTime;\n    }\n    toISOString() {\n        let iso = super.toISOString();\n        // Local Date\n        if (this.isDate())\n            return iso.slice(0, 10);\n        // Local Time\n        if (this.isTime())\n            return iso.slice(11, 23);\n        // Local DateTime\n        if (this.#offset === null)\n            return iso.slice(0, -1);\n        // Offset DateTime\n        if (this.#offset === 'Z')\n            return iso;\n        // This part is quite annoying: JS strips the original timezone from the ISO string representation\n        // Instead of using a \"modified\" date and \"Z\", we restore the representation \"as authored\"\n        let offset = (+(this.#offset.slice(1, 3)) * 60) + +(this.#offset.slice(4, 6));\n        offset = this.#offset[0] === '-' ? offset : -offset;\n        let offsetDate = new Date(this.getTime() - (offset * 60e3));\n        return offsetDate.toISOString().slice(0, -1) + this.#offset;\n    }\n    static wrapAsOffsetDateTime(jsDate, offset = 'Z') {\n        let date = new TomlDate(jsDate);\n        date.#offset = offset;\n        return date;\n    }\n    static wrapAsLocalDateTime(jsDate) {\n        let date = new TomlDate(jsDate);\n        date.#offset = null;\n        return date;\n    }\n    static wrapAsLocalDate(jsDate) {\n        let date = new TomlDate(jsDate);\n        date.#hasTime = false;\n        date.#offset = null;\n        return date;\n    }\n    static wrapAsLocalTime(jsDate) {\n        let date = new TomlDate(jsDate);\n        date.#hasDate = false;\n        date.#offset = null;\n        return date;\n    }\n}\n",
    "/*!\n * Copyright (c) Squirrel Chat et al., All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. Neither the name of the copyright holder nor the names of its contributors\n *    may be used to endorse or promote products derived from this software without\n *    specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport { skipVoid } from './util.js';\nimport { TomlDate } from './date.js';\nimport { TomlError } from './error.js';\nlet INT_REGEX = /^((0x[0-9a-fA-F](_?[0-9a-fA-F])*)|(([+-]|0[ob])?\\d(_?\\d)*))$/;\nlet FLOAT_REGEX = /^[+-]?\\d(_?\\d)*(\\.\\d(_?\\d)*)?([eE][+-]?\\d(_?\\d)*)?$/;\nlet LEADING_ZERO = /^[+-]?0[0-9_]/;\nlet ESCAPE_REGEX = /^[0-9a-f]{4,8}$/i;\nlet ESC_MAP = {\n    b: '\\b',\n    t: '\\t',\n    n: '\\n',\n    f: '\\f',\n    r: '\\r',\n    '\"': '\"',\n    '\\\\': '\\\\',\n};\nexport function parseString(str, ptr = 0, endPtr = str.length) {\n    let isLiteral = str[ptr] === '\\'';\n    let isMultiline = str[ptr++] === str[ptr] && str[ptr] === str[ptr + 1];\n    if (isMultiline) {\n        endPtr -= 2;\n        if (str[ptr += 2] === '\\r')\n            ptr++;\n        if (str[ptr] === '\\n')\n            ptr++;\n    }\n    let tmp = 0;\n    let isEscape;\n    let parsed = '';\n    let sliceStart = ptr;\n    while (ptr < endPtr - 1) {\n        let c = str[ptr++];\n        if (c === '\\n' || (c === '\\r' && str[ptr] === '\\n')) {\n            if (!isMultiline) {\n                throw new TomlError('newlines are not allowed in strings', {\n                    toml: str,\n                    ptr: ptr - 1,\n                });\n            }\n        }\n        else if ((c < '\\x20' && c !== '\\t') || c === '\\x7f') {\n            throw new TomlError('control characters are not allowed in strings', {\n                toml: str,\n                ptr: ptr - 1,\n            });\n        }\n        if (isEscape) {\n            isEscape = false;\n            if (c === 'u' || c === 'U') {\n                // Unicode escape\n                let code = str.slice(ptr, (ptr += (c === 'u' ? 4 : 8)));\n                if (!ESCAPE_REGEX.test(code)) {\n                    throw new TomlError('invalid unicode escape', {\n                        toml: str,\n                        ptr: tmp,\n                    });\n                }\n                try {\n                    parsed += String.fromCodePoint(parseInt(code, 16));\n                }\n                catch {\n                    throw new TomlError('invalid unicode escape', {\n                        toml: str,\n                        ptr: tmp,\n                    });\n                }\n            }\n            else if (isMultiline && (c === '\\n' || c === ' ' || c === '\\t' || c === '\\r')) {\n                // Multiline escape\n                ptr = skipVoid(str, ptr - 1, true);\n                if (str[ptr] !== '\\n' && str[ptr] !== '\\r') {\n                    throw new TomlError('invalid escape: only line-ending whitespace may be escaped', {\n                        toml: str,\n                        ptr: tmp,\n                    });\n                }\n                ptr = skipVoid(str, ptr);\n            }\n            else if (c in ESC_MAP) {\n                // Classic escape\n                parsed += ESC_MAP[c];\n            }\n            else {\n                throw new TomlError('unrecognized escape sequence', {\n                    toml: str,\n                    ptr: tmp,\n                });\n            }\n            sliceStart = ptr;\n        }\n        else if (!isLiteral && c === '\\\\') {\n            tmp = ptr - 1;\n            isEscape = true;\n            parsed += str.slice(sliceStart, tmp);\n        }\n    }\n    return parsed + str.slice(sliceStart, endPtr - 1);\n}\nexport function parseValue(value, toml, ptr, integersAsBigInt) {\n    // Constant values\n    if (value === 'true')\n        return true;\n    if (value === 'false')\n        return false;\n    if (value === '-inf')\n        return -Infinity;\n    if (value === 'inf' || value === '+inf')\n        return Infinity;\n    if (value === 'nan' || value === '+nan' || value === '-nan')\n        return NaN;\n    // Avoid FP representation of -0\n    if (value === '-0')\n        return integersAsBigInt ? 0n : 0;\n    // Numbers\n    let isInt = INT_REGEX.test(value);\n    if (isInt || FLOAT_REGEX.test(value)) {\n        if (LEADING_ZERO.test(value)) {\n            throw new TomlError('leading zeroes are not allowed', {\n                toml: toml,\n                ptr: ptr,\n            });\n        }\n        value = value.replace(/_/g, '');\n        let numeric = +value;\n        if (isNaN(numeric)) {\n            throw new TomlError('invalid number', {\n                toml: toml,\n                ptr: ptr,\n            });\n        }\n        if (isInt) {\n            if ((isInt = !Number.isSafeInteger(numeric)) && !integersAsBigInt) {\n                throw new TomlError('integer value cannot be represented losslessly', {\n                    toml: toml,\n                    ptr: ptr,\n                });\n            }\n            if (isInt || integersAsBigInt === true)\n                numeric = BigInt(value);\n        }\n        return numeric;\n    }\n    const date = new TomlDate(value);\n    if (!date.isValid()) {\n        throw new TomlError('invalid value', {\n            toml: toml,\n            ptr: ptr,\n        });\n    }\n    return date;\n}\n",
    "/*!\n * Copyright (c) Squirrel Chat et al., All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. Neither the name of the copyright holder nor the names of its contributors\n *    may be used to endorse or promote products derived from this software without\n *    specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport { parseString, parseValue } from './primitive.js';\nimport { parseArray, parseInlineTable } from './struct.js';\nimport { indexOfNewline, skipVoid, skipUntil, skipComment, getStringEnd } from './util.js';\nimport { TomlError } from './error.js';\nfunction sliceAndTrimEndOf(str, startPtr, endPtr, allowNewLines) {\n    let value = str.slice(startPtr, endPtr);\n    let commentIdx = value.indexOf('#');\n    if (commentIdx > -1) {\n        // The call to skipComment allows to \"validate\" the comment\n        // (absence of control characters)\n        skipComment(str, commentIdx);\n        value = value.slice(0, commentIdx);\n    }\n    let trimmed = value.trimEnd();\n    if (!allowNewLines) {\n        let newlineIdx = value.indexOf('\\n', trimmed.length);\n        if (newlineIdx > -1) {\n            throw new TomlError('newlines are not allowed in inline tables', {\n                toml: str,\n                ptr: startPtr + newlineIdx\n            });\n        }\n    }\n    return [trimmed, commentIdx];\n}\nexport function extractValue(str, ptr, end, depth, integersAsBigInt) {\n    if (depth === 0) {\n        throw new TomlError('document contains excessively nested structures. aborting.', {\n            toml: str,\n            ptr: ptr\n        });\n    }\n    let c = str[ptr];\n    if (c === '[' || c === '{') {\n        let [value, endPtr] = c === '['\n            ? parseArray(str, ptr, depth, integersAsBigInt)\n            : parseInlineTable(str, ptr, depth, integersAsBigInt);\n        let newPtr = end ? skipUntil(str, endPtr, ',', end) : endPtr;\n        if (endPtr - newPtr && end === '}') {\n            let nextNewLine = indexOfNewline(str, endPtr, newPtr);\n            if (nextNewLine > -1) {\n                throw new TomlError('newlines are not allowed in inline tables', {\n                    toml: str,\n                    ptr: nextNewLine\n                });\n            }\n        }\n        return [value, newPtr];\n    }\n    let endPtr;\n    if (c === '\"' || c === \"'\") {\n        endPtr = getStringEnd(str, ptr);\n        let parsed = parseString(str, ptr, endPtr);\n        if (end) {\n            endPtr = skipVoid(str, endPtr, end !== ']');\n            if (str[endPtr] && str[endPtr] !== ',' && str[endPtr] !== end && str[endPtr] !== '\\n' && str[endPtr] !== '\\r') {\n                throw new TomlError('unexpected character encountered', {\n                    toml: str,\n                    ptr: endPtr,\n                });\n            }\n            endPtr += (+(str[endPtr] === ','));\n        }\n        return [parsed, endPtr];\n    }\n    endPtr = skipUntil(str, ptr, ',', end);\n    let slice = sliceAndTrimEndOf(str, ptr, endPtr - (+(str[endPtr - 1] === ',')), end === ']');\n    if (!slice[0]) {\n        throw new TomlError('incomplete key-value declaration: no value specified', {\n            toml: str,\n            ptr: ptr\n        });\n    }\n    if (end && slice[1] > -1) {\n        endPtr = skipVoid(str, ptr + slice[1]);\n        endPtr += +(str[endPtr] === ',');\n    }\n    return [\n        parseValue(slice[0], str, ptr, integersAsBigInt),\n        endPtr,\n    ];\n}\n",
    "/*!\n * Copyright (c) Squirrel Chat et al., All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. Neither the name of the copyright holder nor the names of its contributors\n *    may be used to endorse or promote products derived from this software without\n *    specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport { parseString } from './primitive.js';\nimport { extractValue } from './extract.js';\nimport { getStringEnd, indexOfNewline, skipComment, skipVoid } from './util.js';\nimport { TomlError } from './error.js';\nlet KEY_PART_RE = /^[a-zA-Z0-9-_]+[ \\t]*$/;\nexport function parseKey(str, ptr, end = '=') {\n    let dot = ptr - 1;\n    let parsed = [];\n    let endPtr = str.indexOf(end, ptr);\n    if (endPtr < 0) {\n        throw new TomlError('incomplete key-value: cannot find end of key', {\n            toml: str,\n            ptr: ptr,\n        });\n    }\n    do {\n        let c = str[ptr = ++dot];\n        // If it's whitespace, ignore\n        if (c !== ' ' && c !== '\\t') {\n            // If it's a string\n            if (c === '\"' || c === '\\'') {\n                if (c === str[ptr + 1] && c === str[ptr + 2]) {\n                    throw new TomlError('multiline strings are not allowed in keys', {\n                        toml: str,\n                        ptr: ptr,\n                    });\n                }\n                let eos = getStringEnd(str, ptr);\n                if (eos < 0) {\n                    throw new TomlError('unfinished string encountered', {\n                        toml: str,\n                        ptr: ptr,\n                    });\n                }\n                dot = str.indexOf('.', eos);\n                let strEnd = str.slice(eos, dot < 0 || dot > endPtr ? endPtr : dot);\n                let newLine = indexOfNewline(strEnd);\n                if (newLine > -1) {\n                    throw new TomlError('newlines are not allowed in keys', {\n                        toml: str,\n                        ptr: ptr + dot + newLine,\n                    });\n                }\n                if (strEnd.trimStart()) {\n                    throw new TomlError('found extra tokens after the string part', {\n                        toml: str,\n                        ptr: eos,\n                    });\n                }\n                if (endPtr < eos) {\n                    endPtr = str.indexOf(end, eos);\n                    if (endPtr < 0) {\n                        throw new TomlError('incomplete key-value: cannot find end of key', {\n                            toml: str,\n                            ptr: ptr,\n                        });\n                    }\n                }\n                parsed.push(parseString(str, ptr, eos));\n            }\n            else {\n                // Normal raw key part consumption and validation\n                dot = str.indexOf('.', ptr);\n                let part = str.slice(ptr, dot < 0 || dot > endPtr ? endPtr : dot);\n                if (!KEY_PART_RE.test(part)) {\n                    throw new TomlError('only letter, numbers, dashes and underscores are allowed in keys', {\n                        toml: str,\n                        ptr: ptr,\n                    });\n                }\n                parsed.push(part.trimEnd());\n            }\n        }\n        // Until there's no more dot\n    } while (dot + 1 && dot < endPtr);\n    return [parsed, skipVoid(str, endPtr + 1, true, true)];\n}\nexport function parseInlineTable(str, ptr, depth, integersAsBigInt) {\n    let res = {};\n    let seen = new Set();\n    let c;\n    let comma = 0;\n    ptr++;\n    while ((c = str[ptr++]) !== '}' && c) {\n        let err = { toml: str, ptr: ptr - 1 };\n        if (c === '\\n') {\n            throw new TomlError('newlines are not allowed in inline tables', err);\n        }\n        else if (c === '#') {\n            throw new TomlError('inline tables cannot contain comments', err);\n        }\n        else if (c === ',') {\n            throw new TomlError('expected key-value, found comma', err);\n        }\n        else if (c !== ' ' && c !== '\\t') {\n            let k;\n            let t = res;\n            let hasOwn = false;\n            let [key, keyEndPtr] = parseKey(str, ptr - 1);\n            for (let i = 0; i < key.length; i++) {\n                if (i)\n                    t = hasOwn ? t[k] : (t[k] = {});\n                k = key[i];\n                if ((hasOwn = Object.hasOwn(t, k)) && (typeof t[k] !== 'object' || seen.has(t[k]))) {\n                    throw new TomlError('trying to redefine an already defined value', {\n                        toml: str,\n                        ptr: ptr,\n                    });\n                }\n                if (!hasOwn && k === '__proto__') {\n                    Object.defineProperty(t, k, { enumerable: true, configurable: true, writable: true });\n                }\n            }\n            if (hasOwn) {\n                throw new TomlError('trying to redefine an already defined value', {\n                    toml: str,\n                    ptr: ptr,\n                });\n            }\n            let [value, valueEndPtr] = extractValue(str, keyEndPtr, '}', depth - 1, integersAsBigInt);\n            seen.add(value);\n            t[k] = value;\n            ptr = valueEndPtr;\n            comma = str[ptr - 1] === ',' ? ptr - 1 : 0;\n        }\n    }\n    if (comma) {\n        throw new TomlError('trailing commas are not allowed in inline tables', {\n            toml: str,\n            ptr: comma,\n        });\n    }\n    if (!c) {\n        throw new TomlError('unfinished table encountered', {\n            toml: str,\n            ptr: ptr,\n        });\n    }\n    return [res, ptr];\n}\nexport function parseArray(str, ptr, depth, integersAsBigInt) {\n    let res = [];\n    let c;\n    ptr++;\n    while ((c = str[ptr++]) !== ']' && c) {\n        if (c === ',') {\n            throw new TomlError('expected value, found comma', {\n                toml: str,\n                ptr: ptr - 1,\n            });\n        }\n        else if (c === '#')\n            ptr = skipComment(str, ptr);\n        else if (c !== ' ' && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n            let e = extractValue(str, ptr - 1, ']', depth - 1, integersAsBigInt);\n            res.push(e[0]);\n            ptr = e[1];\n        }\n    }\n    if (!c) {\n        throw new TomlError('unfinished array encountered', {\n            toml: str,\n            ptr: ptr,\n        });\n    }\n    return [res, ptr];\n}\n",
    "/*!\n * Copyright (c) Squirrel Chat et al., All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. Neither the name of the copyright holder nor the names of its contributors\n *    may be used to endorse or promote products derived from this software without\n *    specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport { parseKey } from './struct.js';\nimport { extractValue } from './extract.js';\nimport { skipVoid } from './util.js';\nimport { TomlError } from './error.js';\nfunction peekTable(key, table, meta, type) {\n    let t = table;\n    let m = meta;\n    let k;\n    let hasOwn = false;\n    let state;\n    for (let i = 0; i < key.length; i++) {\n        if (i) {\n            t = hasOwn ? t[k] : (t[k] = {});\n            m = (state = m[k]).c;\n            if (type === 0 /* Type.DOTTED */ && (state.t === 1 /* Type.EXPLICIT */ || state.t === 2 /* Type.ARRAY */)) {\n                return null;\n            }\n            if (state.t === 2 /* Type.ARRAY */) {\n                let l = t.length - 1;\n                t = t[l];\n                m = m[l].c;\n            }\n        }\n        k = key[i];\n        if ((hasOwn = Object.hasOwn(t, k)) && m[k]?.t === 0 /* Type.DOTTED */ && m[k]?.d) {\n            return null;\n        }\n        if (!hasOwn) {\n            if (k === '__proto__') {\n                Object.defineProperty(t, k, { enumerable: true, configurable: true, writable: true });\n                Object.defineProperty(m, k, { enumerable: true, configurable: true, writable: true });\n            }\n            m[k] = {\n                t: i < key.length - 1 && type === 2 /* Type.ARRAY */\n                    ? 3 /* Type.ARRAY_DOTTED */\n                    : type,\n                d: false,\n                i: 0,\n                c: {},\n            };\n        }\n    }\n    state = m[k];\n    if (state.t !== type && !(type === 1 /* Type.EXPLICIT */ && state.t === 3 /* Type.ARRAY_DOTTED */)) {\n        // Bad key type!\n        return null;\n    }\n    if (type === 2 /* Type.ARRAY */) {\n        if (!state.d) {\n            state.d = true;\n            t[k] = [];\n        }\n        t[k].push(t = {});\n        state.c[state.i++] = (state = { t: 1 /* Type.EXPLICIT */, d: false, i: 0, c: {} });\n    }\n    if (state.d) {\n        // Redefining a table!\n        return null;\n    }\n    state.d = true;\n    if (type === 1 /* Type.EXPLICIT */) {\n        t = hasOwn ? t[k] : (t[k] = {});\n    }\n    else if (type === 0 /* Type.DOTTED */ && hasOwn) {\n        return null;\n    }\n    return [k, t, state.c];\n}\nexport function parse(toml, { maxDepth = 1000, integersAsBigInt } = {}) {\n    let res = {};\n    let meta = {};\n    let tbl = res;\n    let m = meta;\n    for (let ptr = skipVoid(toml, 0); ptr < toml.length;) {\n        if (toml[ptr] === '[') {\n            let isTableArray = toml[++ptr] === '[';\n            let k = parseKey(toml, ptr += +isTableArray, ']');\n            if (isTableArray) {\n                if (toml[k[1] - 1] !== ']') {\n                    throw new TomlError('expected end of table declaration', {\n                        toml: toml,\n                        ptr: k[1] - 1,\n                    });\n                }\n                k[1]++;\n            }\n            let p = peekTable(k[0], res, meta, isTableArray ? 2 /* Type.ARRAY */ : 1 /* Type.EXPLICIT */);\n            if (!p) {\n                throw new TomlError('trying to redefine an already defined table or value', {\n                    toml: toml,\n                    ptr: ptr,\n                });\n            }\n            m = p[2];\n            tbl = p[1];\n            ptr = k[1];\n        }\n        else {\n            let k = parseKey(toml, ptr);\n            let p = peekTable(k[0], tbl, m, 0 /* Type.DOTTED */);\n            if (!p) {\n                throw new TomlError('trying to redefine an already defined table or value', {\n                    toml: toml,\n                    ptr: ptr,\n                });\n            }\n            let v = extractValue(toml, k[1], void 0, maxDepth, integersAsBigInt);\n            p[1][p[0]] = v[0];\n            ptr = v[1];\n        }\n        ptr = skipVoid(toml, ptr, true);\n        if (toml[ptr] && toml[ptr] !== '\\n' && toml[ptr] !== '\\r') {\n            throw new TomlError('each key-value declaration must be followed by an end-of-line', {\n                toml: toml,\n                ptr: ptr\n            });\n        }\n        ptr = skipVoid(toml, ptr);\n    }\n    return res;\n}\n"
  ],
  "mappings": "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",
  "debugId": "83F10B87CBAB342564756E2164756E21",
  "names": []
}