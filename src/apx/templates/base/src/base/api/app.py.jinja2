from fastapi import FastAPI, APIRouter
from fastapi.responses import FileResponse
from fastapi.staticfiles import StaticFiles
from importlib import resources
from pathlib import Path
from {{app_name}} import __version__
from pydantic import BaseModel

app_name = "{{app_name}}"

dist_path: Path = resources.files(app_name).joinpath("__dist__") # type: ignore

app = FastAPI(title=f"{app_name}")
api = APIRouter(prefix="/api", tags=[f"{app_name} API"])

ui = StaticFiles(directory=dist_path, html=True)

class VersionInfo(BaseModel):
    version: str

@api.get('/version', response_model=VersionInfo, operation_id="version")
async def version():
    return VersionInfo(version=__version__)

# note the order of mounts!
app.include_router(api)
app.mount("/", ui)

@app.exception_handler(404)
async def client_side_routing(_, __):
    return FileResponse(dist_path / "index.html")