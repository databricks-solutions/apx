import tailwindcss from "@tailwindcss/vite";
import react from "@vitejs/plugin-react";
import path from "path";
import { defineConfig } from "vite";
import { tanstackRouter } from "@tanstack/router-plugin/vite";

import { execSync } from "child_process";
import type { Plugin } from "vite";
import {generate} from "orval";

export function runOnReload(
  tasks: Array<string | (() => void | Promise<void>)>
): Plugin {
  async function runAll() {
    for (const task of tasks) {
      if (typeof task === "string") {
        console.log(`[vite-plugin-run] exec: ${task}`);
        execSync(task, { stdio: "inherit" });
      } else {
        console.log(`[vite-plugin-run] run function`);
        await task();
      }
    }
  }

  return {
    name: "vite-plugin-run",
    apply: "serve",
    async handleHotUpdate() {
      await runAll();
    },
    async buildStart() {
      await runAll();
    },
  };
}


// https://vite.dev/config/
export default defineConfig({
  root: "src/{{app_name}}/ui",
  plugins: [
    runOnReload([
      "uvx git+https://github.com/renardeinside/apx.git apx openapi {{app_name}}.app:app node_modules/.tmp/openapi.json",
    ]),
    tanstackRouter({
      target: "react",
      autoCodeSplitting: true,
      routesDirectory: "src/{{app_name}}/ui/routes",
      generatedRouteTree: "./types/routeTree.gen.ts",
    }),
    react(),
    tailwindcss(),
  ],
  // setup proxy for the api, only used in development
  server: {
    proxy: {
      "/api": {
        target: "http://localhost:8000",
        changeOrigin: true,
        secure: false,
      },
    },
  },
  build: {
    outDir: "../dist", // relative to root!
    emptyOutDir: true,
    rollupOptions: {
      output: {
        manualChunks: (id) => {
          if (id.includes("react")) {
            return "react";
          }
        },
      },
    },
  },
  resolve: {
    alias: {
      "@": path.resolve(__dirname, "src/{{app_name}}/ui"),
    },
  },
});